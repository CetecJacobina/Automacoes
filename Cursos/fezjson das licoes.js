async function coletarItensDaLicao() {
    const licao = document.querySelector("#shared-lists > .list-group-item.bg-grey");

    if (!licao) {
        console.log("‚ö†Ô∏è Nenhuma li√ß√£o encontrada.");
        return;
    }

    const tituloLicao = licao.innerText.split("\n")[0].trim();
    console.log(`üìö Li√ß√£o: ${tituloLicao}`);

    let proximoElemento = licao.nextElementSibling;
    let itensColetados = [];

    if (proximoElemento && proximoElemento.classList.contains("lista")) {
        const itens = proximoElemento.querySelectorAll(".list-group-item");

        for (const item of itens) {
            const linkEditar = item.querySelector('a[href*="edit"]')?.href;

            if (!linkEditar) {
                console.log("‚ö†Ô∏è Link de edi√ß√£o n√£o encontrado.");
                continue;
            }

            console.log(`üîó Obtendo dados de: ${linkEditar}`);
            try {
                const dados = await obterDadosConteudo(linkEditar);
                if (dados) {
                    itensColetados.push(dados);
                }
            } catch (erro) {
                console.error(`‚ùå Erro ao coletar dados de ${linkEditar}:`, erro.message);
            }
        }

        console.log("‚úÖ Coleta finalizada. Salvando JSON...");
        salvarJSON({ licao: tituloLicao, itens: itensColetados });
    } else {
        console.log("‚ö†Ô∏è Nenhum conte√∫do encontrado.");
    }
}

// Fun√ß√£o para obter dados do conte√∫do sem abrir uma nova aba
async function obterDadosConteudo(url) {
    try {
        console.log(`üïµÔ∏è‚Äç‚ôÇÔ∏è Iniciando busca do conte√∫do de: ${url}`);

        const response = await fetch(url, {
            headers: {
                'Accept': 'text/html',
                'Content-Type': 'text/html',
            },
            credentials: 'same-origin'
        });

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const text = await response.text();
        const parser = new DOMParser();
        const doc = parser.parseFromString(text, 'text/html');

        console.log(`üìÑ HTML carregado com sucesso de: ${url}`);

        const titulo = doc.querySelector('input[name="titulo"]')?.value.trim() || "T√≠tulo n√£o encontrado";
        const tituloAbreviado = doc.querySelector('input[name="titulo_abreviado"]')?.value.trim() || "Sem t√≠tulo abreviado";
        const conteudo = doc.querySelector('.note-editable')?.innerHTML || "N√£o encontrado";

        console.log(`üìå ${titulo} (${tituloAbreviado})`);
        console.log(`üìú Conte√∫do: ${conteudo.substring(0, 50)}...`);

        console.log(`üïµÔ∏è‚Äç‚ôÇÔ∏è Busca do conte√∫do de ${url} finalizada com sucesso.`);

        return { titulo, tituloAbreviado, conteudo };
    } catch (erro) {
        console.error(`‚ùå Erro ao obter dados do conte√∫do: ${erro.message}`);
        throw erro;
    }
}

// Salvar JSON como arquivo
function salvarJSON(dados) {
    const json = JSON.stringify(dados, null, 2);
    const blob = new Blob([json], { type: "application/json" });
    const link = document.createElement("a");

    link.href = URL.createObjectURL(blob);
    link.download = "licao_conteudos.json";
    link.click();

    console.log("üìÇ Arquivo JSON salvo com sucesso!");
}

// Executar no console do navegador:
coletarItensDaLicao();
